// Functiontree
select rhf.node, rhf.parent, rhf.order, k.page, k.entity, k.show, k.edit, k.create, k.delete, t.description, t.description_long
from roles_have_functionnodes as rhf, k_functionnodes as k, t_functionnodes as t
where k.key = rhf.functionnode_key
and   t.key = k.key
and   rhf.role_key = 'admin'
and   t.language_key = 'de'
order by rhf.node;

select users.id, users.user_name, t_languages.description language, t_currencies.description currency, users.locked, users.initial, users.active
from users as users
left join  t_languages as t_languages on t_languages.key = users.language_key and t_languages.language_key = 'de'
left outer join  t_currencies as t_currencies on t_currencies.key = users.currency_key and t_currencies.language_key = 'de'
where users.test = 0
and   users.deleted = 0

// views for reporting
SELECT
CONCAT(p.name_first, ' ', p.name_last) person,
tst.description,
s.start 'start',
WEEK(s.start) 'week', 
zd.description ,
IFNULL(SUM(SUBSTR(sd.duration_target,1,2) * 3600 + SUBSTR(sd.duration_target,4,2) * 60 + SUBSTR(sd.duration_target,7,2)),0) target,
IFNULL(SUM(SUBSTR(sd.duration_actual,1,2) * 3600 + SUBSTR(sd.duration_actual,4,2) * 60 + SUBSTR(sd.duration_actual,7,2)),0) actual,
IFNULL(SUM(di.massage),0) massage,
IFNULL(SUM(di.camp),0) camp
FROM schedules_detail sd
JOIN schedules s ON s.id = sd.id
JOIN persons p ON p.id = s.person_id
JOIN zones_definition zd ON zd.id = sd.zone_id
JOIN t_scheduletypes tst ON tst.key = s.type AND tst.language_key = 'de'
LEFT JOIN day_infos di ON di.date = s.start AND di.person_id = s.person_id
GROUP BY CONCAT(p.name_first, ' ', p.name_last), tst.description, WEEK(s.start), zd.description